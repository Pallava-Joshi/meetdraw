services:
  backend:
    build:
      context: ./
      dockerfile: docker/Dockerfile.backend
      args:
        - DATABASE_URL=postgresql://harshit:password@postgres:5432/meetdraw
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://harshit:password@postgres:5432/meetdraw
      - JWT_SECRET=8765redsxcvgytredfrtyuj
      - PORT=3001
      - SALTROUNDS=10
      - FRONTEND_ORIGIN=http://frontend:3000
    depends_on:
      - db

  frontend:
    build:
      context: ./
      dockerfile: docker/Dockerfile.frontend
      args:
        - DATABASE_URL=postgresql://harshit:password@postgres:5432/meetdraw
        - NEXT_PUBLIC_HTTP_URL=http://backend:3001/api/v1
        - NEXT_PUBLIC_WS_URL=ws://ws:8080/
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_HTTP_URL=http://backend:3001/api/v1
      - NEXT_PUBLIC_WS_URL=ws://ws:8080/
      - DATABASE_URL=postgresql://harshit:password@postgres:5432/meetdraw
    depends_on:
      - backend
      - ws
      - db

  ws:
    build:
      context: ./
      dockerfile: docker/Dockerfile.ws
      args:
        - DATABASE_URL=postgresql://harshit:password@postgres:5432/meetdraw
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://harshit:password@postgres:5432/meetdraw
      - JWT_SECRET=8765redsxcvgytredfrtyuj
      - PORT=8080
    depends_on:
      - db

  db:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432" # Maps host port 5432 to container port 5432
    environment:
      POSTGRES_USER: harshit
      POSTGRES_PASSWORD: password
      POSTGRES_DB: meetdraw
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data in a named volume

volumes:
  postgres_data:
